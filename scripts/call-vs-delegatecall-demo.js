const { ethers } = require("hardhat");

/**
 * call vs delegatecall ÂÆûÈôÖÊºîÁ§∫ËÑöÊú¨
 * ÈÄöËøáÂÆûÈôÖÊµãËØïÂ±ïÁ§∫‰∏§ÁßçË∞ÉÁî®ÊñπÂºèÁöÑÊ†∏ÂøÉÂå∫Âà´
 */
async function main() {
    console.log("üîç call vs delegatecall ÂØπÊØîÊºîÁ§∫\n");

    const [deployer, user] = await ethers.getSigners();
    console.log("üë§ ÈÉ®ÁΩ≤ËÄÖ:", deployer.address);
    console.log("üë§ Áî®Êà∑:", user.address);

    // ÈÉ®ÁΩ≤ÊµãËØïÂêàÁ∫¶
    console.log("\nüì¶ ÈÉ®ÁΩ≤ÊµãËØïÂêàÁ∫¶...");
    
    // 1. ÈÉ®ÁΩ≤ÁõÆÊ†áÂêàÁ∫¶
    const TargetContract = await ethers.getContractFactory("CallTestTarget");
    const target = await TargetContract.deploy();
    await target.deployed();
    console.log("‚úÖ ÁõÆÊ†áÂêàÁ∫¶Âú∞ÂùÄ:", target.address);

    // 2. ÈÉ®ÁΩ≤Ë∞ÉÁî®ËÄÖÂêàÁ∫¶
    const CallerContract = await ethers.getContractFactory("CallTestCaller");
    const caller = await CallerContract.deploy();
    await caller.deployed();
    console.log("‚úÖ Ë∞ÉÁî®ËÄÖÂêàÁ∫¶Âú∞ÂùÄ:", caller.address);

    // ÂàùÂßãÁä∂ÊÄÅÊ£ÄÊü•
    console.log("\nüìä ÂàùÂßãÁä∂ÊÄÅÊ£ÄÊü•:");
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ value:", (await target.value()).toString());
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ sender:", await target.sender());
    console.log("   Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ value:", (await caller.value()).toString());
    console.log("   Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ sender:", await caller.sender());

    console.log("\n" + "=".repeat(60));
    console.log("ÊµãËØï 1: ‰ΩøÁî® call Ë∞ÉÁî®");
    console.log("=".repeat(60));

    // ÊµãËØïcallË∞ÉÁî®
    console.log("üîÑ ÊâßË°å call Ë∞ÉÁî®...");
    const callTx = await caller.testCall(target.address, 100);
    await callTx.wait();

    console.log("\nüìä callË∞ÉÁî®ÂêéÁöÑÁä∂ÊÄÅ:");
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ value:", (await target.value()).toString());
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ sender:", await target.sender());
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ contractAddress:", await target.contractAddress());
    console.log("   Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ value:", (await caller.value()).toString());
    console.log("   Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ sender:", await caller.sender());
    console.log("   Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ contractAddress:", await caller.contractAddress());

    console.log("\nüí° call Ë∞ÉÁî®ÂàÜÊûê:");
    console.log("   ‚úÖ ÁõÆÊ†áÂêàÁ∫¶ÁöÑÂ≠òÂÇ®Ë¢´‰øÆÊîπ");
    console.log("   ‚úÖ msg.sender ÊòØË∞ÉÁî®ËÄÖÂêàÁ∫¶Âú∞ÂùÄ");
    console.log("   ‚úÖ address(this) ÊòØÁõÆÊ†áÂêàÁ∫¶Âú∞ÂùÄ");
    console.log("   ‚úÖ Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ÁöÑÂ≠òÂÇ®Êú™Ë¢´‰øÆÊîπ");

    console.log("\n" + "=".repeat(60));
    console.log("ÊµãËØï 2: ‰ΩøÁî® delegatecall Ë∞ÉÁî®");  
    console.log("=".repeat(60));

    // ÈáçÁΩÆÁõÆÊ†áÂêàÁ∫¶Áä∂ÊÄÅ
    await target.reset();
    
    // ÊµãËØïdelegatecallË∞ÉÁî®
    console.log("üîÑ ÊâßË°å delegatecall Ë∞ÉÁî®...");
    const delegateCallTx = await caller.testDelegateCall(target.address, 200);
    await delegateCallTx.wait();

    console.log("\nüìä delegatecallË∞ÉÁî®ÂêéÁöÑÁä∂ÊÄÅ:");
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ value:", (await target.value()).toString());
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ sender:", await target.sender());
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ contractAddress:", await target.contractAddress());
    console.log("   Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ value:", (await caller.value()).toString());
    console.log("   Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ sender:", await caller.sender());
    console.log("   Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ contractAddress:", await caller.contractAddress());

    console.log("\nüí° delegatecall Ë∞ÉÁî®ÂàÜÊûê:");
    console.log("   ‚úÖ Ë∞ÉÁî®ËÄÖÂêàÁ∫¶ÁöÑÂ≠òÂÇ®Ë¢´‰øÆÊîπ");
    console.log("   ‚úÖ msg.sender ‰øùÊåÅÂéüÂßãË∞ÉÁî®ËÄÖÂú∞ÂùÄ");
    console.log("   ‚úÖ address(this) ÊòØË∞ÉÁî®ËÄÖÂêàÁ∫¶Âú∞ÂùÄ");
    console.log("   ‚úÖ ÁõÆÊ†áÂêàÁ∫¶ÁöÑÂ≠òÂÇ®Êú™Ë¢´‰øÆÊîπ");

    console.log("\n" + "=".repeat(60));
    console.log("ÊµãËØï 3: Ê®°Êãü‰ª£ÁêÜÊ®°Âºè");
    console.log("=".repeat(60));

    // ÈÉ®ÁΩ≤ÁÆÄÂçï‰ª£ÁêÜÂêàÁ∫¶
    const SimpleProxy = await ethers.getContractFactory("SimpleProxyDemo");
    const proxy = await SimpleProxy.deploy(target.address);
    await proxy.deployed();
    console.log("‚úÖ ‰ª£ÁêÜÂêàÁ∫¶Âú∞ÂùÄ:", proxy.address);

    // ÈÄöËøá‰ª£ÁêÜË∞ÉÁî®
    console.log("\nüîÑ ÈÄöËøá‰ª£ÁêÜÂêàÁ∫¶Ë∞ÉÁî®ÁõÆÊ†áÂêàÁ∫¶ÂáΩÊï∞...");
    
    // ÁºñÁ†ÅÂáΩÊï∞Ë∞ÉÁî®
    const updateData = target.interface.encodeFunctionData("updateState", [300]);
    
    // ÈÄöËøá‰ª£ÁêÜÁöÑfallbackÂáΩÊï∞Ë∞ÉÁî®
    const proxyTx = await deployer.sendTransaction({
        to: proxy.address,
        data: updateData,
        gasLimit: 100000
    });
    await proxyTx.wait();

    console.log("\nüìä ‰ª£ÁêÜË∞ÉÁî®ÂêéÁöÑÁä∂ÊÄÅ:");
    const proxyAsTarget = TargetContract.attach(proxy.address);
    console.log("   ‰ª£ÁêÜÂêàÁ∫¶ value:", (await proxyAsTarget.value()).toString());
    console.log("   ‰ª£ÁêÜÂêàÁ∫¶ sender:", await proxyAsTarget.sender());
    console.log("   ‰ª£ÁêÜÂêàÁ∫¶ contractAddress:", await proxyAsTarget.contractAddress());
    console.log("   ÁõÆÊ†áÂêàÁ∫¶ value:", (await target.value()).toString());

    console.log("\nüí° ‰ª£ÁêÜÊ®°ÂºèÂàÜÊûê:");
    console.log("   ‚úÖ ‰ª£ÁêÜÂêàÁ∫¶Â≠òÂÇ®Ë¢´‰øÆÊîπ (value = 300)");
    console.log("   ‚úÖ msg.sender ÊòØÂéüÂßãÈÉ®ÁΩ≤ËÄÖÂú∞ÂùÄ");
    console.log("   ‚úÖ address(this) ÊòØ‰ª£ÁêÜÂêàÁ∫¶Âú∞ÂùÄ");
    console.log("   ‚úÖ ÁõÆÊ†áÂêàÁ∫¶Â≠òÂÇ®‰øùÊåÅ‰∏çÂèò");
    console.log("   üéØ ËøôÂ∞±ÊòØ‰ª£ÁêÜÊ®°ÂºèÁöÑÊ†∏ÂøÉÊú∫Âà∂ÔºÅ");

    console.log("\n" + "=".repeat(60));
    console.log("ÊÄªÁªìÂØπÊØî");
    console.log("=".repeat(60));

    console.log(`
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ     Ë∞ÉÁî®ÊñπÂºè     ‚îÇ   Â≠òÂÇ®‰øÆÊîπ‰ΩçÁΩÆ   ‚îÇ   ‰∏ä‰∏ãÊñá‰øùÊåÅ     ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ      call       ‚îÇ   ÁõÆÊ†áÂêàÁ∫¶Â≠òÂÇ®   ‚îÇ   ÁõÆÊ†áÂêàÁ∫¶‰∏ä‰∏ãÊñá ‚îÇ
‚îÇ  delegatecall   ‚îÇ   Ë∞ÉÁî®ËÄÖÂ≠òÂÇ®    ‚îÇ   Ë∞ÉÁî®ËÄÖ‰∏ä‰∏ãÊñá   ‚îÇ
‚îÇ    ‰ª£ÁêÜÊ®°Âºè     ‚îÇ   ‰ª£ÁêÜÂêàÁ∫¶Â≠òÂÇ®   ‚îÇ   Áî®Êà∑‰∏ä‰∏ãÊñá     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
    `);

    console.log("\nüéØ ÂÖ≥ÈîÆÁêÜËß£:");
    console.log("1. call: Âú®ÁõÆÊ†áÂêàÁ∫¶ÁöÑ‰∏ä‰∏ãÊñá‰∏≠ÊâßË°åÔºå‰øÆÊîπÁõÆÊ†áÂêàÁ∫¶Áä∂ÊÄÅ");
    console.log("2. delegatecall: Âú®Ë∞ÉÁî®ËÄÖÁöÑ‰∏ä‰∏ãÊñá‰∏≠ÊâßË°åÁõÆÊ†á‰ª£Á†ÅÔºå‰øÆÊîπË∞ÉÁî®ËÄÖÁä∂ÊÄÅ");  
    console.log("3. ‰ª£ÁêÜÊ®°Âºè: Âà©Áî®delegatecallÂú®‰ª£ÁêÜÂêàÁ∫¶Â≠òÂÇ®‰∏≠ÊâßË°åÂÆûÁé∞ÂêàÁ∫¶ÈÄªËæë");
    console.log("4. ËøôÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÂçáÁ∫ßÂêéÊï∞ÊçÆËÉΩ‰øùÊåÅÂú®‰ª£ÁêÜÂêàÁ∫¶‰∏≠ÁöÑÂéüÁêÜÔºÅ");

    console.log("\nüöÄ ÊºîÁ§∫ÂÆåÊàêÔºÅ");
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå ÊºîÁ§∫Â§±Ë¥•:", error);
        process.exit(1);
    });